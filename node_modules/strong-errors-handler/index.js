
const notFound = (req, res, next) => {
    const error = new Error(`Not Found - ${req.originalUrl}`);
    error.status = 404;
    res.status(404)
    next(error);
};
const errorHandlerNotify = async (err, req, res, next) => {
    if (err.name === "ValidationError") {
        const errors = {};
        await Object.values(err.errors).map((val) => {
            errors[val.path] = val.message
        });
        return res.status(400).json({
            error: errors || err,
            stack: process.env.NODE_ENV === "production" ? null : err.stack,
        });
    } else {
        if (err.status === 404) {
            console.log(err.message)
            return res.status(404).json({
                error: `Not Found!`,
                stack: process.env.NODE_ENV === "production" ? null : err.stack,
            })
        }
        res.status(500).json({
            error: err.message || err,
            stack: process.env.NODE_ENV === "production" ? null : err.stack,
        });
    }
    next(err.message || err)
}
module.exports = { errorHandlerNotify, notFound };